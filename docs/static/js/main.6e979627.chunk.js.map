{"version":3,"sources":["shared/interfaces.ts","reportWebVitals.ts","pages/About/About.tsx","Components/Plancard/Plancard.tsx","utils/constants.ts","Components/DropDown/DropDown.tsx","pages/App/App.tsx","router/interfaces.ts","utils/productUtils.ts","router/index.ts","pages/PlanDetails/PlanDetails.tsx","index.tsx"],"names":["Slots","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","About","className","Plancard","props","name","price","timeSlotMapping","morning","afternoon","evening","ddMMyyyy","dateOptions","format","Date","addDays","DropDown","options","value","selectedOption","onChange","onSelect","placeholder","RouteName","App","map","item","label","slotOptions","useState","products","setProducts","categories","setCategories","filteredProducts","setFilteredProducts","selectedDate","setDate","selectedSlot","setSlot","selectedCategory","setCategory","useEffect","fetch","data","json","response","category","categoryName","image","categoryImage","prod","filter","catItem","forEach","p","Object","keys","slots","includes","some","getFilteredProducts","citem","isSelected","join","onClick","length","index","key","routes","component","routeName","path","exact","PlanDetails","ReactDOM","render","StrictMode","route","document","getElementById"],"mappings":"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","file":"static/js/main.6e979627.chunk.js","sourcesContent":["export interface ICalendarInterface {\n  timeFormat: string\n  timeIntervals: number\n  dateFormat: string\n  minDate: Date\n  maxDate: Date\n  timeCaption: string\n  inline: boolean\n  withPortal: boolean\n  showTimeSelect: boolean\n  startDate: Date | null\n  onChange: Function\n  showTimeSelectOnly: boolean\n  placeholderText?: string\n}\n\nexport interface ISpinnerProps {\n  customClass?: string;\n}\n\ntype ButtonTheme =\n  | \"orange\"\n  | \"empty\"\n  | \"orange-gradient\"\n  | \"basedark\"\n  | \"loading\"\n  | \"link\"\n  | \"lightblue\"\n  | \"bordered\";\n\nexport enum Slots {\n  morning,\n  afternoon,\n  evening\n}\n\nexport interface IButtonProps {\n  title?: any;\n  type?: \"\" | \"loading\";\n  customClass?: string;\n  onClick?: any;\n  disabled?: boolean;\n  disableOnLoading?: boolean;\n  member?: string;\n  customValueAttr?: any;\n  theme?: ButtonTheme;\n  name?: string;\n}\n\n\nexport interface IPlanProps {\n  name: string\n  image: string\n  video: string\n  price: number\n  offerPrice: number\n  tag: string\n  description?: string\n  title?: string\n  subtitle?: string\n}\n\nexport interface ICategory {\n  category:string\n  name: string\n  image:string\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nconst About = () => {\n\n  return (\n    <div className=\"About\">\n      I am About Page\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport { IPlanProps } from \"../../shared/interfaces\";\n\nconst Plancard = (props: IPlanProps) => {\n    return (\n        <>\n          <div className=\"mb-4 border border-gray-80 rounded overflow-hidden\">\n            <div className=\"w-full bg-gray-200 h-40\"></div>\n            <div className=\"p-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm\">{props.name}</span>\n                <span className=\"text-sm font-medium\">50+ Enrolled</span>\n              </div>\n              <div className=\"flex justify-between mb-4\">\n                <span className=\"text-sm\">Live yoga with goga</span>\n                <span className=\"text-sm font-medium text-blue-500\">INR {props.price}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm underline\">View Details</span>\n                <button className=\"text-sm text-white bg-yellow-600 px-3 py-1 rounded\">Book Now</button>\n              </div>\n            </div>\n          </div>\n        </>\n    );\n};\n\nexport default Plancard;\n","import { addDays, format } from \"date-fns\";\nimport { Slots } from \"../shared/interfaces\";\n\nexport const MorningSlots = [5, 6, 7, 8, 9, 10, 11]\nexport const AfternoonSlots = [12, 13, 14, 15, 16, 17]\nexport const EveningSlots = [18, 19, 20, 21, 22, 23, 24]\n\nexport const timeSlotMapping : { [key in Slots]: number[]} = {\n  [Slots.morning]: MorningSlots,\n  [Slots.afternoon]: AfternoonSlots,\n  [Slots.evening]: EveningSlots\n}\n\nexport const ddMMyyyy = 'dd-MM-yyyy';\n\nexport const dateOptions = [\n  format(new Date(), ddMMyyyy),\n  format(addDays(new Date(), 1), ddMMyyyy),\n  format(addDays(new Date(), 2), ddMMyyyy),\n  format(addDays(new Date(), 3), ddMMyyyy),\n  format(addDays(new Date(), 4), ddMMyyyy)\n];\n\n","import Select from 'react-select';\n\ninterface IDropDown {\n  options: { value: any, label: any}[]\n  defaultValue?: any,\n  selectedOption: {value: any , label: any} | null;\n  onSelect: Function\n  placeholder?: string \n}\n\nexport default function DropDown(props: IDropDown) {\n\n  const handleStateChange = (value: any) => {\n    props.onSelect(value);\n  }\n\n  return (\n    <div className=\"App\">\n      <Select\n        options={props.options}\n        value={props.selectedOption}\n        onChange={handleStateChange}\n        placeholder={props.placeholder}\n      />\n    </div>\n  );\n}","import React,{ useState, useEffect } from \"react\";\nimport format from \"date-fns/format\";\nimport Plancard from \"../../Components/Plancard/Plancard\";\nimport { ddMMyyyy } from \"../../utils/constants\";\nimport { getAllCategories, getDatesForDropDown, getFilteredProducts, getSlotsForDropDown } from \"../../utils/productUtils\";\nimport DropDown from \"../../Components/DropDown/DropDown\";\nimport { ICategory, IPlanProps } from \"../../shared/interfaces\";\n\nexport const App = () => {\n\tconst dateOptions = getDatesForDropDown();\n\tconst slotOptions = getSlotsForDropDown();\n\t\n\tconst [products, setProducts] = useState([]);\n\tconst [categories, setCategories] = useState([]);\n\tconst [filteredProducts, setFilteredProducts] = useState([]);\n\tconst [selectedDate, setDate] = useState({\n\t\tvalue: format(new Date(), ddMMyyyy),\n\t\tlabel: format(new Date(), ddMMyyyy)\n\t});\n\tconst [selectedSlot, setSlot] = useState(null);\n\tconst [selectedCategory, setCategory] = useState<ICategory | null>(null);\n\t\n\tuseEffect(() => {\n\t\tfetch('./products.json')\n\t\t\t.then((data)=> data.json())\n\t\t\t.then((response) => {\n\t\t\t\tsetCategories(getAllCategories(response));\n\t\t\t\tsetProducts(response);\n\t\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst data = getFilteredProducts(products, selectedSlot, selectedDate, selectedCategory);\n\t\tsetFilteredProducts(data);\n\t}, [selectedSlot, selectedDate, selectedCategory, products])\n\t\n\tconst handleDateChange = (data: any) => {\n\t\tsetDate(data);\n\t}\n\t\n\tconst handleSlotChange = (data: any) => {\n\t\tsetSlot(data);\n\t}\n\n\tconst handleCategoryChange = (data: any) => {\n\t\tsetCategory(data);\n\t\tsetSlot(null);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h4 className=\"pt-6 my-4 text-center font-medium\">Its Happening Now</h4>\n\t\t\t<div className=\"flex w-full overflow-x-auto pb-4\">\n\t\t\t\t\t{\n\t\t\t\t\t\tcategories.map((citem : any) => {\n\t\t\t\t\t\t\tconst isSelected = (selectedCategory ? citem.category === selectedCategory?.category : false)\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className={['mx-3 text-center', (isSelected ? 'selected' : '') ].join(' ')} key={citem.category} onClick={()=>handleCategoryChange(citem)}>\n\t\t\t\t\t\t\t\t\t<div className=\"rounded-full w-14 h-14 border bg-gray-200\"></div>\n\t\t\t\t\t\t\t\t\t<span className=\"text-xs mt-2\">{citem.category}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div className=\"mb-8\">\n\t\t\t\t<div className=\"mb-4 text-right\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<DropDown \n\t\t\t\t\t\t\toptions={dateOptions} \n\t\t\t\t\t\t\tselectedOption={selectedDate} \n\t\t\t\t\t\t\tonSelect={handleDateChange} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<DropDown \n\t\t\t\t\t\t\toptions={slotOptions} \n\t\t\t\t\t\t\tselectedOption={selectedSlot} \n\t\t\t\t\t\t\tonSelect={handleSlotChange} \n\t\t\t\t\t\t\tplaceholder=\"select batch\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{filteredProducts.length ? filteredProducts.map((item: IPlanProps, index: number) => {\n\t\t\t\t\treturn <Plancard {...item} key={index} />\n\t\t\t\t}): null}\n\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","export enum RouteName {\n  About = 'about',\n  App = 'app',\n  PlanDetails = 'plandetails'\n}\n\nexport interface IRoute {\n  path: string;\n  routeName: RouteName;\n  component: () => JSX.Element;\n  exact: boolean\n}\n\nexport interface IAllRoutes {\n  ABOUT: IRoute;\n  APP: IRoute;\n  PLANDETAILS: IRoute\n}\n","import { dateOptions, timeSlotMapping } from \"./constants\"\n\nexport const getFilteredProducts = (data: any, selectedSlot: any, selectedDate : any, selectedCategory: any) => {\n  let prod: any = [];\n  if(selectedCategory){\n    const category = data.filter((catItem: any) => catItem.category === selectedCategory.category);\n    prod = category[0].products;\n  }else{\n    data.forEach((catItem: any) => {\n      prod = [...prod, ...catItem.products]\n    })\n  }\n  \n  if(selectedDate && !selectedSlot) {\n    prod = prod.filter((p: any)=> {\n      const dateValues = Object.keys(p.slots);\n      return dateValues.includes(selectedDate.value)\n    })  \n  }else if(selectedSlot && selectedDate){\n    prod = prod.filter((p: any)=> {\n      const value = p.slots[selectedDate.value]\n      if(value){\n        return value.some((item: any) => (timeSlotMapping as any)[selectedSlot.value].includes(item))\n      }else{\n        return false;\n      }\n    })\n  }\n  \n  return prod;\n}\n\nexport const getAllCategories = (data: any) => {\n  return data.map((item: any) => {\n    return {\n      category: item.category,\n      name: item.categoryName,\n      image: item.categoryImage,\n    }\n  })\n}\n\nexport const getDatesForDropDown = () => {\n  return dateOptions.map((item: any) => {\n    return {\n      value: item,\n      label: item\n    }\n  })\n}\n\nexport const getSlotsForDropDown = () => {\n  return [{\n    value: 0,\n    label: 'Morning'\n  },{\n    value: 1,\n    label: 'Afternoon'\n  },{\n    value: 2,\n    label: 'Evening'\n  }]\n}","import About from \"../pages/About/About\";\nimport App from \"../pages/App/App\";\nimport { PlanDetails } from \"../pages/PlanDetails/PlanDetails\";\nimport { IRoute, RouteName } from \"./interfaces\";\n\nexport const routes : IRoute[] = [\n  {\n    component: App,\n    routeName: RouteName.App,\n    path: \"/\",\n    exact: true,\n  },\n  {\n    component: About,\n    routeName: RouteName.About,\n    path: \"/about\",\n    exact: true\n  },\n  {\n    component: PlanDetails,\n    routeName: RouteName.PlanDetails,\n    path: \"/plandetails/:id\",\n    exact: true\n  },\n];","export function PlanDetails() {\n    return (\n        <>\n            <div className=\"mt-8\">\n                <div className=\"text-md mb-4 font-medium\">\n                    Live yoga with goga Live\n                </div>\n                <span className=\"text-sm\">\n                    Live yoga with goga Live yoga with goga Live yoga with goga\n                    Live yoga with goga Live yoga with goga Live yoga with goga\n                </span>\n            </div>\n            <div className=\"flex justify-between mt-4\">\n                <span className=\"text-sm\">Session Flow</span>\n                <span className=\"text-sm font-medium\">50+ Minutes</span>\n            </div>\n            <ul className=\"pl-4 mt-4\">\n                <li>--Live yoga</li>\n                <li>--Live yoga</li>\n                <li>--Live yoga</li>\n                <li>--Live yoga</li>\n            </ul>\n            <div className=\"mt-5\">\n                <div className=\"text-md mb-1 font-medium\">\n                    Live yoga with goga Live\n                </div>\n                <span className=\"text-sm\">\n                    Live yoga with goga Live yoga with goga Live yoga with goga\n                    Live yoga with goga Live yoga with goga Live yoga with goga\n                </span>\n            </div>\n\n            <div className=\"mt-4 mb-10\">\n                <div className=\"text-md mb-1 font-medium\">\n                    Live yoga with goga Live\n                </div>\n                <span className=\"text-sm\">\n                    Live yoga with goga Live yoga with goga Live yoga with goga\n                    Live yoga with goga Live yoga with goga Live yoga with goga\n                </span>\n            </div>\n            <button className=\"text-base w-full text-white bg-yellow-600 text-center py-3 rounded\">\n                Book Now\n            </button>\n        </>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './assets/css/index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { routes } from './router';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        {\n          routes.map((route)=> {\n            return <Route exact={true} path={route.path} component={route.component} key={route.path}/>\n          })\n        }\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}